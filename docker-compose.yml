version: '3.4'
services:
  registry:
    image: bharathsimbu/registry
    container_name: registry
    restart: always
    ports:
      - "8761:8761"
    networks:
      - spring-microservice-network

  gateway:
    image: bharathsimbu/gateway
    container_name: gateway
    restart: always
    depends_on:
      - registry
    environment:
      - "EUREKA_CLIENT_SERVICEURL_DEFAULTZONE=http://registry:8761/eureka"
    ports:
      - "8040:8040"
    networks:
      - spring-microservice-network
      
  product:
    image: bharathsimbu/product
    container_name: product
    restart: always
    deploy:
      replicas: 1
    depends_on:
      - registry
    environment:
      - "EUREKA_CLIENT_SERVICEURL_DEFAULTZONE=http://registry:8761/eureka"
      - "SPRING_PROFILES_ACTIVE=dev"
    ports:
      - "8010:8010"
    networks:
      - spring-microservice-network
    labels:
      collect_logs_with_filebeat: "true"
      decode_log_event_to_json_object: "true"
      
  review:
    image: bharathsimbu/review
    container_name: review
    restart: always
    deploy:
      replicas: 1
    depends_on:
      - registry
    environment:
      - "EUREKA_CLIENT_SERVICEURL_DEFAULTZONE=http://registry:8761/eureka"
      - "SPRING_PROFILES_ACTIVE=dev"
    ports:
      - "8030:8030"
    networks:
      - spring-microservice-network  
    labels:
      collect_logs_with_filebeat: "true"
      decode_log_event_to_json_object: "true"
      
  inventory:
    image: bharathsimbu/inventory
    container_name: inventory
    restart: always
    deploy:
      replicas: 1
    depends_on:
      - registry
    environment:
      - "EUREKA_CLIENT_SERVICEURL_DEFAULTZONE=http://registry:8761/eureka"
      - "SPRING_PROFILES_ACTIVE=dev"
    ports:
      - "8020:8020"
    networks:
      - spring-microservice-network
    labels:
      collect_logs_with_filebeat: "true"
      decode_log_event_to_json_object: "true"
      
#docker network create -d bridge spring-microservice-network
networks:
  spring-microservice-network:
    external: true